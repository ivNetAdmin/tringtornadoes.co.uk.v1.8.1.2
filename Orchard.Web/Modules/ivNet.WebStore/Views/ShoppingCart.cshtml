@using Orchard.Autoroute.Models
@using Orchard.ContentManagement
@using ivNet.Webstore.Models
@using Orchard.Core.Title.Models
@{
    Style.Require("Webstore.ShoppingCart");
    Script.Require("Webstore.ShoppingCart");
    var items = (IList<dynamic>)Model.ShopItems;
    var subtotal = (decimal) Model.Subtotal;
    var vat = (decimal) Model.Vat;
    var total = (decimal) Model.Total;
}
<div class="shopping-cart-view">
    <div class="cart">
        @if (!items.Any())
        {
            <p>You don't have any items in your shopping cart.</p>
            <a class="button" href="/shop">Continue shopping</a>
        }
        else
        {
            <div data-bind="visible: !hasItems()">
                <p>You have @items.Count item(s) in your shopping cart.</p>            
            </div>
            <br/>
            <div data-bind="visible: hasItems()">
                <article class="shoppingcart" data-load-shoppingcart-url="@Url.Action("GetItems", "ShoppingCart", new { area = "ivNet.Webstore" })" data-update-shoppingcart-url="@Url.Action("Update", "ShoppingCart", new { area = "ivNet.Webstore" })">
                    @using (Html.BeginFormAntiForgeryPost(Url.Action("Update", "ShoppingCart", new { area = "ivNet.Webstore" })))
                    {
                        <table>
                            <thead>
                                <tr>
                                    <td>Item</td>
                                    <td class="numeric">Price</td>
                                    <td class="numeric">Quantity</td>
                                    <td class="numeric">Total</td>
                                    <td class="action"></td>
                                </tr>
                            </thead>
                            <tbody data-bind='template: {name: "itemTemplate", foreach: items}'>
                                @for (var i = 0; i < items.Count; i++)
                                {
                                    var item = items[i];
                                    var product = (ProductPart)item.Product;
                                    var contentItem = (ContentItem)item.ContentItem;
                                    var titlePart = contentItem.As<TitlePart>();
                                    var title = titlePart != null ? titlePart.Title : "(no titlePart attached)";
                                    var quantity = (int)item.Quantity;
                                    var unitPrice = product.Price;
                                    var totalPrice = quantity * unitPrice;
                                    <tr>
                                        <td>@title</td>
                                        <td class="numeric">@unitPrice.ToString("c")</td>
                                        <td class="numeric">
                                            <input name="@string.Format("items[{0}].ProductId", i)" type="hidden" value="@product.Id" />
                                            <input name="@string.Format("items[{0}].IsRemoved", i)" type="hidden" value="false" />
                                            <input name="@string.Format("items[{0}].Quantity", i)" type="number" value="@quantity" />
                                        </td>
                                        <td class="numeric">@totalPrice.ToString("c")</td>
                                        <td class="action"><a class="icon delete postback" href="#"></a></td>
                                    </tr>
                                }

                            </tbody>
                            <tfoot>
                                <tr><td colspan="5">&nbsp;</td></tr>
                                <tr class="separator">
                                    <td class="update" colspan="5"><button name="command" value="Update" type="submit">Update</button></td>
                                </tr>
                                <tr>
                                    <td class="numeric label" colspan="3">Subtotal:</td>
                                    <td class="numeric"><span data-bind="text: Globalize.format(calculateSubtotal(), 'c')">@subtotal.ToString("c")</span></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td class="numeric label" colspan="3">VAT (20%):</td>
                                    <td class="numeric"><span data-bind="text: Globalize.format(calculateVat(), 'c')">@vat.ToString("c")</span></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td class="numeric label" colspan="3">Total:</td>
                                    <td class="numeric"><span data-bind="text: Globalize.format(calculateTotal(), 'c')">@total.ToString("c")</span></td>
                                    <td></td>
                                </tr>
                            </tfoot>
                        </table>
                        <footer>
                            <div class="group">
                                <div class="align left"><button type="submit" name="command" value="ContinueShopping">Continue shopping</button></div>
                                <div class="align right"><button type="submit" name="command" value="Checkout">Proceed to checkout</button></div>
                            </div>
                        </footer>
                    }
                </article>

                <script type="text/html" id="itemTemplate">
                    <tr>
                        <td><span data-bind="text: title"></span></td>
                        <td class="numeric"><span data-bind="text: Globalize.format(unitPrice, 'c')"></span></td>
                        <td class="numeric">
                            <input data-bind="attr: { name: 'items[' + index() + '].ProductId'}, value: id" type="hidden" />
                            <input data-bind="attr: { name: 'items[' + index() + '].Quantity'}, value: quantity" type="number" />
                        </td>
                        <td class="numeric"><span data-bind="text: Globalize.format(total(), 'c')"></span></td>
                        <td><a class="icon delete" href="#"></a></td>
                    </tr>
                </script>
            </div>
        }
    </div>
</div>